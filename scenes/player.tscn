[gd_scene load_steps=8 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody

const gravity = 98
const sprintspeed = 1000
const defspeed = 250
var speed = 250
const jumpspd = 10
const sensetivity = -0.005
var velocity = Vector3()
var mousemotion
var tile = 0
var velocity_raw = Basis()

onready var prevpos = translation
onready var cam = $offset/primarycam

func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	pass # Replace with function body.

func _process(_delta):
	if Input.is_action_just_pressed(\"ui_cancel\"):
		if Input.get_mouse_mode() == Input.MOUSE_MODE_VISIBLE:
			Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
		else:
			Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE)
	
	if Input.is_action_just_pressed(\"flashlight\"):
		$offset/primarycam/SpotLight.visible = !$offset/primarycam/SpotLight.visible
	

func _physics_process(delta):
	var pos = translation
	var up = pos.normalized()
	
	if mousemotion:
		cam.rotation.x = clamp(cam.rotation.x + (mousemotion.y * sensetivity), deg2rad(0), deg2rad(180))
		$offset.rotate_z(mousemotion.x*sensetivity)
		pass
	mousemotion = null
	
	speed = sprintspeed if Input.is_action_pressed(\"speedup\") else defspeed
	
	velocity += jumpspd* int(Input.is_action_pressed(\"jump\")) * up# * int(is_on_floor()) 
	velocity -= gravity * up * delta
	
	velocity = $offset.global_transform.basis.xform(velocity)
	
	var move = Vector3()
	move.y = -int(Input.is_action_pressed(\"backward\"))+int(Input.is_action_pressed(\"forward\"))
	move.x = int(Input.is_action_pressed(\"straferight\"))-int(Input.is_action_pressed(\"strafeleft\"))
	
	var ymove = ($offset.transform.basis.y*Vector3(1, 1, 0)).normalized()
	var xmove = ($offset.transform.basis.x*Vector3(1, 1, 0)).normalized()
	velocity = xmove* move.x * delta * speed + ymove * move.y * delta * speed + Vector3(0, 0, velocity.z)
	
	velocity = $offset.global_transform.basis.xform_inv(velocity)
	
	velocity = move_and_slide(velocity, up, true)
	
	transform = transform.orthonormalized()
	if transform.basis.y.normalized().cross(-up) != Vector3():
		look_at(Vector3(0, 0, 0), transform.basis.y)
	elif transform.basis.x.normalized().cross(-up) != Vector3():
		look_at(Vector3(0, 0, 0), transform.basis.x)
	
	pass

func _input(event):
	
	if event is InputEventMouseMotion and Input.get_mouse_mode() == Input.MOUSE_MODE_CAPTURED:
		mousemotion = event.relative
		pass
	
	
"

[sub_resource type="ParticlesMaterial" id=2]
direction = Vector3( 0, 0, 0 )
spread = 180.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 0.1

[sub_resource type="SpatialMaterial" id=3]
params_blend_mode = 1
albedo_color = Color( 0, 1, 1, 0.501961 )

[sub_resource type="CubeMesh" id=4]
material = SubResource( 3 )
size = Vector3( 1, 1, 1 )

[sub_resource type="CapsuleMesh" id=11]
radius = 0.5

[sub_resource type="CapsuleShape" id=12]
radius = 0.5

[sub_resource type="CubeMesh" id=13]

[node name="player" type="KinematicBody"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0 )
script = SubResource( 1 )

[node name="offset" type="Spatial" parent="."]

[node name="primarycam" type="Camera" parent="offset"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, -6.55671e-08, 1.5 )
current = true
fov = 90.0
far = 5000.0

[node name="placeablock" type="RayCast" parent="offset/primarycam"]
enabled = true
cast_to = Vector3( 0, 0, -10 )

[node name="blockpos" type="Particles" parent="offset/primarycam/placeablock"]
visible = false
amount = 1
lifetime = 0.05
process_material = SubResource( 2 )
draw_pass_1 = SubResource( 4 )

[node name="SpotLight" type="SpotLight" parent="offset/primarycam"]
shadow_enabled = true
spot_range = 1000.0

[node name="MeshInstance" type="MeshInstance" parent="offset"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -4.37114e-08, 1 )
mesh = SubResource( 11 )
material/0 = null

[node name="collision" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -4.37114e-08, 1 )
shape = SubResource( 12 )

[node name="OmniLight" type="OmniLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1 )
shadow_enabled = true
omni_range = 50.0

[node name="bruh" type="Node" parent="."]

[node name="MeshInstance" type="MeshInstance" parent="bruh"]
mesh = SubResource( 13 )
material/0 = null
